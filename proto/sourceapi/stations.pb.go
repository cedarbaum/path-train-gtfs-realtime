// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: stations.proto

package path_apiv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	latlng "google.golang.org/genproto/googleapis/type/latlng"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The possible statuses of a train.
type GetUpcomingTrainsResponse_UpcomingTrain_Status int32

const (
	// The status was not specified.
	GetUpcomingTrainsResponse_UpcomingTrain_STATUS_UNSPECIFIED GetUpcomingTrainsResponse_UpcomingTrain_Status = 0
	// The train is running on or close to schedule.
	GetUpcomingTrainsResponse_UpcomingTrain_ON_TIME GetUpcomingTrainsResponse_UpcomingTrain_Status = 1
	// The train is either in the station or arriving soon.
	GetUpcomingTrainsResponse_UpcomingTrain_ARRIVING_NOW GetUpcomingTrainsResponse_UpcomingTrain_Status = 2
	// The train is experiencing a delay.
	GetUpcomingTrainsResponse_UpcomingTrain_DELAYED GetUpcomingTrainsResponse_UpcomingTrain_Status = 3
)

// Enum value maps for GetUpcomingTrainsResponse_UpcomingTrain_Status.
var (
	GetUpcomingTrainsResponse_UpcomingTrain_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "ON_TIME",
		2: "ARRIVING_NOW",
		3: "DELAYED",
	}
	GetUpcomingTrainsResponse_UpcomingTrain_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"ON_TIME":            1,
		"ARRIVING_NOW":       2,
		"DELAYED":            3,
	}
)

func (x GetUpcomingTrainsResponse_UpcomingTrain_Status) Enum() *GetUpcomingTrainsResponse_UpcomingTrain_Status {
	p := new(GetUpcomingTrainsResponse_UpcomingTrain_Status)
	*p = x
	return p
}

func (x GetUpcomingTrainsResponse_UpcomingTrain_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetUpcomingTrainsResponse_UpcomingTrain_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_stations_proto_enumTypes[0].Descriptor()
}

func (GetUpcomingTrainsResponse_UpcomingTrain_Status) Type() protoreflect.EnumType {
	return &file_stations_proto_enumTypes[0]
}

func (x GetUpcomingTrainsResponse_UpcomingTrain_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetUpcomingTrainsResponse_UpcomingTrain_Status.Descriptor instead.
func (GetUpcomingTrainsResponse_UpcomingTrain_Status) EnumDescriptor() ([]byte, []int) {
	return file_stations_proto_rawDescGZIP(), []int{6, 0, 0}
}

// The request message for the list stations RPC.
type ListStationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The maximum number of elements to return for a single request.
	// If unspecified, the server will pick a reasonable default.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. The page token returned by the server in a previous call. Used
	// to get the next page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListStationsRequest) Reset() {
	*x = ListStationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStationsRequest) ProtoMessage() {}

func (x *ListStationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStationsRequest.ProtoReflect.Descriptor instead.
func (*ListStationsRequest) Descriptor() ([]byte, []int) {
	return file_stations_proto_rawDescGZIP(), []int{0}
}

func (x *ListStationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListStationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// The response message for the list stations RPC.
type ListStationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This page of stations.
	Stations []*StationData `protobuf:"bytes,1,rep,name=stations,proto3" json:"stations,omitempty"`
	// The page token used to request the next page. Empty/unspecified if there
	// are no more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListStationsResponse) Reset() {
	*x = ListStationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stations_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStationsResponse) ProtoMessage() {}

func (x *ListStationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stations_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStationsResponse.ProtoReflect.Descriptor instead.
func (*ListStationsResponse) Descriptor() ([]byte, []int) {
	return file_stations_proto_rawDescGZIP(), []int{1}
}

func (x *ListStationsResponse) GetStations() []*StationData {
	if x != nil {
		return x.Stations
	}
	return nil
}

func (x *ListStationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// The request message for the get stations RPC
type GetStationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The station to get.
	Station Station `protobuf:"varint,1,opt,name=station,proto3,enum=path_api.v1.Station" json:"station,omitempty"`
}

func (x *GetStationRequest) Reset() {
	*x = GetStationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stations_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStationRequest) ProtoMessage() {}

func (x *GetStationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stations_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStationRequest.ProtoReflect.Descriptor instead.
func (*GetStationRequest) Descriptor() ([]byte, []int) {
	return file_stations_proto_rawDescGZIP(), []int{2}
}

func (x *GetStationRequest) GetStation() Station {
	if x != nil {
		return x.Station
	}
	return Station_STATION_UNSPECIFIED
}

// The request message for the get station schedule RPC.
type GetStationScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The station for this request.
	Station Station `protobuf:"varint,1,opt,name=station,proto3,enum=path_api.v1.Station" json:"station,omitempty"`
	// Optional. The maximum number of elements to return for a single request.
	// If unspecified, the server will pick a reasonable default.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. The page token returned by the server in a previous call. Used
	// to get the next page.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *GetStationScheduleRequest) Reset() {
	*x = GetStationScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stations_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStationScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStationScheduleRequest) ProtoMessage() {}

func (x *GetStationScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stations_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStationScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetStationScheduleRequest) Descriptor() ([]byte, []int) {
	return file_stations_proto_rawDescGZIP(), []int{3}
}

func (x *GetStationScheduleRequest) GetStation() Station {
	if x != nil {
		return x.Station
	}
	return Station_STATION_UNSPECIFIED
}

func (x *GetStationScheduleRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetStationScheduleRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// The response message for the get station schedule RPC.
type GetStationScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The page token used to request the next page. Empty/unspecified if there
	// are no more results.
	NextPageToken string `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *GetStationScheduleResponse) Reset() {
	*x = GetStationScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stations_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStationScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStationScheduleResponse) ProtoMessage() {}

func (x *GetStationScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stations_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStationScheduleResponse.ProtoReflect.Descriptor instead.
func (*GetStationScheduleResponse) Descriptor() ([]byte, []int) {
	return file_stations_proto_rawDescGZIP(), []int{4}
}

func (x *GetStationScheduleResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// The request message for the get upcoming (realtime) trains RPC.
type GetUpcomingTrainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The station for this request.
	Station Station `protobuf:"varint,1,opt,name=station,proto3,enum=path_api.v1.Station" json:"station,omitempty"`
}

func (x *GetUpcomingTrainsRequest) Reset() {
	*x = GetUpcomingTrainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stations_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpcomingTrainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpcomingTrainsRequest) ProtoMessage() {}

func (x *GetUpcomingTrainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stations_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpcomingTrainsRequest.ProtoReflect.Descriptor instead.
func (*GetUpcomingTrainsRequest) Descriptor() ([]byte, []int) {
	return file_stations_proto_rawDescGZIP(), []int{5}
}

func (x *GetUpcomingTrainsRequest) GetStation() Station {
	if x != nil {
		return x.Station
	}
	return Station_STATION_UNSPECIFIED
}

// The response message for the get upcoming (realtime) trains RPC.
type GetUpcomingTrainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The collection of upcoming trains.
	UpcomingTrains []*GetUpcomingTrainsResponse_UpcomingTrain `protobuf:"bytes,1,rep,name=upcoming_trains,json=upcomingTrains,proto3" json:"upcoming_trains,omitempty"`
}

func (x *GetUpcomingTrainsResponse) Reset() {
	*x = GetUpcomingTrainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stations_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpcomingTrainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpcomingTrainsResponse) ProtoMessage() {}

func (x *GetUpcomingTrainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stations_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpcomingTrainsResponse.ProtoReflect.Descriptor instead.
func (*GetUpcomingTrainsResponse) Descriptor() ([]byte, []int) {
	return file_stations_proto_rawDescGZIP(), []int{6}
}

func (x *GetUpcomingTrainsResponse) GetUpcomingTrains() []*GetUpcomingTrainsResponse_UpcomingTrain {
	if x != nil {
		return x.UpcomingTrains
	}
	return nil
}

// Represents a station within the PATH system.
// Loosely follows GTFS format for "stops" representing location_type of 1.
// This doesn't directly follow GTFS because the format is both unwieldy for JSON/HTTP
// APIs and the PATH GTFS data does not populate most fields.
type StationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The PATH station in question.
	Station Station `protobuf:"varint,1,opt,name=station,proto3,enum=path_api.v1.Station" json:"station,omitempty"`
	// The ID (stop_id) of this station.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// The human-friendly name of this station.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The geographic coordinates (lat/lon) of this station.
	Coordinates *latlng.LatLng `protobuf:"bytes,4,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	// Collection of platforms/tracks within the station.
	Platforms []*StationData_Area `protobuf:"bytes,6,rep,name=platforms,proto3" json:"platforms,omitempty"`
	// Collection of entrances to the station.
	Entrances []*StationData_Area `protobuf:"bytes,7,rep,name=entrances,proto3" json:"entrances,omitempty"`
	// The timezone in which this station is located.
	Timezone string `protobuf:"bytes,8,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *StationData) Reset() {
	*x = StationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stations_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationData) ProtoMessage() {}

func (x *StationData) ProtoReflect() protoreflect.Message {
	mi := &file_stations_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationData.ProtoReflect.Descriptor instead.
func (*StationData) Descriptor() ([]byte, []int) {
	return file_stations_proto_rawDescGZIP(), []int{7}
}

func (x *StationData) GetStation() Station {
	if x != nil {
		return x.Station
	}
	return Station_STATION_UNSPECIFIED
}

func (x *StationData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StationData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StationData) GetCoordinates() *latlng.LatLng {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *StationData) GetPlatforms() []*StationData_Area {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *StationData) GetEntrances() []*StationData_Area {
	if x != nil {
		return x.Entrances
	}
	return nil
}

func (x *StationData) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

// Represents a single upcoming train into the station.
// Next ID: 9
type GetUpcomingTrainsResponse_UpcomingTrain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The headsign for the train in question (e.g. Newark).
	//
	// Deprecated: Do not use.
	LineName string `protobuf:"bytes,1,opt,name=line_name,json=lineName,proto3" json:"line_name,omitempty"`
	// The headsign for the train in question (e.g. Newark).
	Headsign string `protobuf:"bytes,6,opt,name=headsign,proto3" json:"headsign,omitempty"`
	// The route this train is on.
	Route Route `protobuf:"varint,7,opt,name=route,proto3,enum=path_api.v1.Route" json:"route,omitempty"`
	// The display name for the route and direction.
	RouteDisplayName string `protobuf:"bytes,8,opt,name=route_display_name,json=routeDisplayName,proto3" json:"route_display_name,omitempty"`
	// The direction of the train along the route.
	Direction Direction `protobuf:"varint,9,opt,name=direction,proto3,enum=path_api.v1.Direction" json:"direction,omitempty"`
	// The collection of colors (in HTML HEX format) that represent the train line.
	// Usually only a single color applies (orange for JSQ/33rd) but sometimes more
	// than one color applies (33rd via HOB).
	LineColors []string `protobuf:"bytes,2,rep,name=line_colors,json=lineColors,proto3" json:"line_colors,omitempty"`
	// The timestamp (UTC) of the projected arrival of this train.
	ProjectedArrival *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=projected_arrival,json=projectedArrival,proto3" json:"projected_arrival,omitempty"`
	// The status of the train.
	Status GetUpcomingTrainsResponse_UpcomingTrain_Status `protobuf:"varint,5,opt,name=status,proto3,enum=path_api.v1.GetUpcomingTrainsResponse_UpcomingTrain_Status" json:"status,omitempty"`
	// The timestamp (UTC) when this projection was made.
	LastUpdated *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
}

func (x *GetUpcomingTrainsResponse_UpcomingTrain) Reset() {
	*x = GetUpcomingTrainsResponse_UpcomingTrain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stations_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpcomingTrainsResponse_UpcomingTrain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpcomingTrainsResponse_UpcomingTrain) ProtoMessage() {}

func (x *GetUpcomingTrainsResponse_UpcomingTrain) ProtoReflect() protoreflect.Message {
	mi := &file_stations_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpcomingTrainsResponse_UpcomingTrain.ProtoReflect.Descriptor instead.
func (*GetUpcomingTrainsResponse_UpcomingTrain) Descriptor() ([]byte, []int) {
	return file_stations_proto_rawDescGZIP(), []int{6, 0}
}

// Deprecated: Do not use.
func (x *GetUpcomingTrainsResponse_UpcomingTrain) GetLineName() string {
	if x != nil {
		return x.LineName
	}
	return ""
}

func (x *GetUpcomingTrainsResponse_UpcomingTrain) GetHeadsign() string {
	if x != nil {
		return x.Headsign
	}
	return ""
}

func (x *GetUpcomingTrainsResponse_UpcomingTrain) GetRoute() Route {
	if x != nil {
		return x.Route
	}
	return Route_ROUTE_UNSPECIFIED
}

func (x *GetUpcomingTrainsResponse_UpcomingTrain) GetRouteDisplayName() string {
	if x != nil {
		return x.RouteDisplayName
	}
	return ""
}

func (x *GetUpcomingTrainsResponse_UpcomingTrain) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_DIRECTION_UNSPECIFIED
}

func (x *GetUpcomingTrainsResponse_UpcomingTrain) GetLineColors() []string {
	if x != nil {
		return x.LineColors
	}
	return nil
}

func (x *GetUpcomingTrainsResponse_UpcomingTrain) GetProjectedArrival() *timestamppb.Timestamp {
	if x != nil {
		return x.ProjectedArrival
	}
	return nil
}

func (x *GetUpcomingTrainsResponse_UpcomingTrain) GetStatus() GetUpcomingTrainsResponse_UpcomingTrain_Status {
	if x != nil {
		return x.Status
	}
	return GetUpcomingTrainsResponse_UpcomingTrain_STATUS_UNSPECIFIED
}

func (x *GetUpcomingTrainsResponse_UpcomingTrain) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

// Represents a platform/track/entrence area within a station.
// Representing GTFS stops with location_type of 0 and a parent_station.
type StationData_Area struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID (stop_id) of this platform.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The human-friendly name of this platform.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The grographic coordinates (lat/lon) of this station.
	Coordinates *latlng.LatLng `protobuf:"bytes,3,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
}

func (x *StationData_Area) Reset() {
	*x = StationData_Area{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stations_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationData_Area) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationData_Area) ProtoMessage() {}

func (x *StationData_Area) ProtoReflect() protoreflect.Message {
	mi := &file_stations_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationData_Area.ProtoReflect.Descriptor instead.
func (*StationData_Area) Descriptor() ([]byte, []int) {
	return file_stations_proto_rawDescGZIP(), []int{7, 0}
}

func (x *StationData_Area) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StationData_Area) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StationData_Area) GetCoordinates() *latlng.LatLng {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

var File_stations_proto protoreflect.FileDescriptor

var file_stations_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x0c, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x2f, 0x6c, 0x61, 0x74, 0x6c, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x51, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x74, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x43, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x87, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x44, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x4a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa3, 0x05, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0f, 0x75, 0x70, 0x63,
	0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x63, 0x6f, 0x6d,
	0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x0e, 0x75, 0x70, 0x63, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x1a, 0xa6, 0x04, 0x0a, 0x0d, 0x55, 0x70, 0x63,
	0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x09, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x28, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x47, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x12,
	0x53, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3b, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x22, 0x4c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x52, 0x52, 0x49, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x4e,
	0x4f, 0x57, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x45, 0x44, 0x10,
	0x03, 0x22, 0x91, 0x03, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x52,
	0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x09,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70,
	0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x09, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x1a, 0x61, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35,
	0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x73, 0x32, 0xfc, 0x03, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x69, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12,
	0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x66, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x70, 0x61,
	0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x61,
	0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x12, 0x8e, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x70,
	0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x70,
	0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x70,
	0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70,
	0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x7b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x72, 0x65, 0x61, 0x6c,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0xb7, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x61, 0x74,
	0x68, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x66, 0x65, 0x6e, 0x6e,
	0x65, 0x6c, 0x6c, 0x2f, 0x70, 0x61, 0x74, 0x68, 0x2d, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x2d, 0x67,
	0x74, 0x66, 0x73, 0x2d, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x70, 0x69, 0x3b, 0x70, 0x61, 0x74,
	0x68, 0x5f, 0x61, 0x70, 0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x0a,
	0x50, 0x61, 0x74, 0x68, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0a, 0x50, 0x61, 0x74,
	0x68, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16, 0x50, 0x61, 0x74, 0x68, 0x41, 0x70,
	0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0b, 0x50, 0x61, 0x74, 0x68, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stations_proto_rawDescOnce sync.Once
	file_stations_proto_rawDescData = file_stations_proto_rawDesc
)

func file_stations_proto_rawDescGZIP() []byte {
	file_stations_proto_rawDescOnce.Do(func() {
		file_stations_proto_rawDescData = protoimpl.X.CompressGZIP(file_stations_proto_rawDescData)
	})
	return file_stations_proto_rawDescData
}

var file_stations_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_stations_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_stations_proto_goTypes = []interface{}{
	(GetUpcomingTrainsResponse_UpcomingTrain_Status)(0), // 0: path_api.v1.GetUpcomingTrainsResponse.UpcomingTrain.Status
	(*ListStationsRequest)(nil),                         // 1: path_api.v1.ListStationsRequest
	(*ListStationsResponse)(nil),                        // 2: path_api.v1.ListStationsResponse
	(*GetStationRequest)(nil),                           // 3: path_api.v1.GetStationRequest
	(*GetStationScheduleRequest)(nil),                   // 4: path_api.v1.GetStationScheduleRequest
	(*GetStationScheduleResponse)(nil),                  // 5: path_api.v1.GetStationScheduleResponse
	(*GetUpcomingTrainsRequest)(nil),                    // 6: path_api.v1.GetUpcomingTrainsRequest
	(*GetUpcomingTrainsResponse)(nil),                   // 7: path_api.v1.GetUpcomingTrainsResponse
	(*StationData)(nil),                                 // 8: path_api.v1.StationData
	(*GetUpcomingTrainsResponse_UpcomingTrain)(nil),     // 9: path_api.v1.GetUpcomingTrainsResponse.UpcomingTrain
	(*StationData_Area)(nil),                            // 10: path_api.v1.StationData.Area
	(Station)(0),                                        // 11: path_api.v1.Station
	(*latlng.LatLng)(nil),                               // 12: google.type.LatLng
	(Route)(0),                                          // 13: path_api.v1.Route
	(Direction)(0),                                      // 14: path_api.v1.Direction
	(*timestamppb.Timestamp)(nil),                       // 15: google.protobuf.Timestamp
}
var file_stations_proto_depIdxs = []int32{
	8,  // 0: path_api.v1.ListStationsResponse.stations:type_name -> path_api.v1.StationData
	11, // 1: path_api.v1.GetStationRequest.station:type_name -> path_api.v1.Station
	11, // 2: path_api.v1.GetStationScheduleRequest.station:type_name -> path_api.v1.Station
	11, // 3: path_api.v1.GetUpcomingTrainsRequest.station:type_name -> path_api.v1.Station
	9,  // 4: path_api.v1.GetUpcomingTrainsResponse.upcoming_trains:type_name -> path_api.v1.GetUpcomingTrainsResponse.UpcomingTrain
	11, // 5: path_api.v1.StationData.station:type_name -> path_api.v1.Station
	12, // 6: path_api.v1.StationData.coordinates:type_name -> google.type.LatLng
	10, // 7: path_api.v1.StationData.platforms:type_name -> path_api.v1.StationData.Area
	10, // 8: path_api.v1.StationData.entrances:type_name -> path_api.v1.StationData.Area
	13, // 9: path_api.v1.GetUpcomingTrainsResponse.UpcomingTrain.route:type_name -> path_api.v1.Route
	14, // 10: path_api.v1.GetUpcomingTrainsResponse.UpcomingTrain.direction:type_name -> path_api.v1.Direction
	15, // 11: path_api.v1.GetUpcomingTrainsResponse.UpcomingTrain.projected_arrival:type_name -> google.protobuf.Timestamp
	0,  // 12: path_api.v1.GetUpcomingTrainsResponse.UpcomingTrain.status:type_name -> path_api.v1.GetUpcomingTrainsResponse.UpcomingTrain.Status
	15, // 13: path_api.v1.GetUpcomingTrainsResponse.UpcomingTrain.last_updated:type_name -> google.protobuf.Timestamp
	12, // 14: path_api.v1.StationData.Area.coordinates:type_name -> google.type.LatLng
	1,  // 15: path_api.v1.Stations.ListStations:input_type -> path_api.v1.ListStationsRequest
	3,  // 16: path_api.v1.Stations.GetStation:input_type -> path_api.v1.GetStationRequest
	4,  // 17: path_api.v1.Stations.GetStationSchedule:input_type -> path_api.v1.GetStationScheduleRequest
	6,  // 18: path_api.v1.Stations.GetUpcomingTrains:input_type -> path_api.v1.GetUpcomingTrainsRequest
	2,  // 19: path_api.v1.Stations.ListStations:output_type -> path_api.v1.ListStationsResponse
	8,  // 20: path_api.v1.Stations.GetStation:output_type -> path_api.v1.StationData
	5,  // 21: path_api.v1.Stations.GetStationSchedule:output_type -> path_api.v1.GetStationScheduleResponse
	7,  // 22: path_api.v1.Stations.GetUpcomingTrains:output_type -> path_api.v1.GetUpcomingTrainsResponse
	19, // [19:23] is the sub-list for method output_type
	15, // [15:19] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_stations_proto_init() }
func file_stations_proto_init() {
	if File_stations_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_stations_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stations_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stations_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stations_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStationScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stations_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStationScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stations_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpcomingTrainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stations_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpcomingTrainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stations_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stations_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpcomingTrainsResponse_UpcomingTrain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stations_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationData_Area); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stations_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stations_proto_goTypes,
		DependencyIndexes: file_stations_proto_depIdxs,
		EnumInfos:         file_stations_proto_enumTypes,
		MessageInfos:      file_stations_proto_msgTypes,
	}.Build()
	File_stations_proto = out.File
	file_stations_proto_rawDesc = nil
	file_stations_proto_goTypes = nil
	file_stations_proto_depIdxs = nil
}
